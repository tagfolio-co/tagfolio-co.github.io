{"version":3,"sources":["components/Home.js","components/Repos.js","components/Portfolio.js","index.js"],"names":["Home","id","HomeIntro","Docs","Search","props","state","userName","updateUsername","bind","e","this","setState","target","value","SearchBox","handleChange","goToPortfolio","SearchButton","React","Component","type","onChange","onKeyDown","key","window","location","href","placeholder","url","className","style","color","fontWeight","Repos","repos","tagList","tagSelected","updateSelectedTag","TagList","tags","selectedTag","RepoList","visableRepos","newTag","fetch","json","api","github","getRepos","reposToDisplay","i","repo","name","desc","lang","descLen","length","substring","toLowerCase","match","thisTagList","push","map","tag","slice","toUpperCase","charAt","includes","repoList","Object","keys","shown","undefined","Tags","highlight","onClick","Portfolio","bio","email","blog","username","title","user","events","event","commits","commit","author","getUser","getEvents","getEmail","App","split","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb5c1919.chunk.js","sourcesContent":["import React from 'react';\n\nexport function Home() {\n    return (\n        <div id='Home'>\n            <HomeIntro />\n            <Search />\n            <Docs />\n        </div>\n    )\n}\n\nfunction HomeIntro() {\n    return (\n        <div id='Intro'>\n            <div id='callToAction'>\n                <h1>Build beautiful portfolios in seconds</h1>\n                <h2>See what weâ€™re talking about</h2>\n                <br />\n                <h2>&#9660;</h2>\n            </div>\n        </div>\n    )\n}\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            userName: ''\n        }\n\n        this.updateUsername = this.updateUsername.bind(this)\n    }\n\n    updateUsername(e) {\n        this.setState({ userName: e.target.value })\n    }\n\n    render() {\n        return (\n            <div id='Search'>\n                <SearchBox handleChange={this.updateUsername} goToPortfolio={this.goToPortfolio}/>\n                <SearchButton userName={this.state.userName} />\n            </div>\n        );\n    }\n}\n\n\nfunction SearchBox(props) {\n    let handleKeyDown = (e) => {\n        let [key, userName] = [e.key, e.target.value]\n        key === 'Enter' && (window.location.href = '/?' + userName)\n    }\n\n    return <input type='text' onChange={props.handleChange} onKeyDown={handleKeyDown} placeholder='GitHub Username'/>\n}\n\nfunction SearchButton(props) {\n    let url = '/?' + props.userName\n    return <a href={url}><i className=\"material-icons\">search</i></a>\n}\n\n\n\nfunction Docs(){\n\n    return (\n        <div id='Docs'>\n            <h1>How does this work?</h1>\n            <p>We use GitHub's APIs to build you a portfolio based on your public repos.</p>\n            \n            <h1>How does custom tagging work?</h1>\n            <p>Just add <span style={{color:'#78D5D7', fontWeight:'bolder'}}>#customTags</span> to repository descriptions, and the tags will be pulled in automatically.</p>\n\n            <h1>Can I hide some of my repos?</h1>\n            <p>Yep! Just add <span style={{color:'#78D5D7', fontWeight:'bolder'}}>[x]</span> to the end of the repo's description to prevent it from being displayed.</p>\n\n        </div>\n    )\n}","import React from 'react'\nimport RepoAPI from '../APIJson/repos.json'\n//import RepoAPI from '../APIJson/reposJosh.json'\n\nexport class Repos extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            repos : {},\n            tagList:{},\n            tagSelected:'All'\n        }\n\n        this.updateSelectedTag = this.updateSelectedTag.bind(this)\n    }\n    \n\n    render(){\n\n        return (\n            <div className='Repos'>\n                <TagList \n                    tags={this.state.tagList}\n                    selectedTag={this.state.tagSelected}\n                    updateSelectedTag={this.updateSelectedTag}\n                />\n\n                <RepoList \n                    repos={this.state.repos} \n                    visableRepos={this.state.tagList[this.state.tagSelected]}\n                />\n\n            </div>\n        )\n    }\n    \n    updateSelectedTag(newTag){\n        this.setState({tagSelected:newTag})\n    }\n\n    async getRepos(url){\n        let repos = await fetch(url)\n        return repos.json()\n    }\n    \n    async componentDidMount(){\n        let api = 'https://api.github.com/users/'+this.props.github+'/repos?sort=created'\n        \n        // use this for dev\n        // let repos = RepoAPI\n        \n        let repos = await this.getRepos(api)\n\n        let reposToDisplay = []\n        let tagList = {}\n        let i = -1\n\n        while (i < repos.length-1){\n            i++\n            \n            let repo = repos[i]\n            let name = repo['name']\n            let desc = repo['description']\n            let lang = repo['language']\n            let url = repo['html_url']\n\n            // only show repos with descriptions\n            if (!desc) continue\n    \n            // exclude repos with [x] at the end of the description\n            let descLen = desc.length\n            let exclude = desc.substring(descLen - 3).toLowerCase() === '[x]'\n            if (exclude) continue\n            \n            // check to see if the repo has any tags\n            let tags = desc.match(/#\\S+/g) || []\n            let thisTagList = []\n\n            // make sure there will be tags to associate\n            if (tags || lang){\n                // add lang to tags\n                tags.push('#' + lang)\n                \n                tags.map(tag => {\n                    // remove '#'\n                    tag = tag.slice(1)\n                        \n                    // tag consistency\n                    switch(tag.toUpperCase()){\n                        case 'JS': tag = 'JavaScript';\n                        case 'HTML': tag = 'HTML';\n                        case 'CSS': tag = 'CSS';\n                    }\n\n                    tag = tag.charAt(0).toUpperCase() + tag.slice(1)\n                    \n                    if (tag.toUpperCase() !== 'NULL'){\n\n                        // add the tag if it doesn't exist\n                        !tagList[tag] && (tagList[tag] = [])\n                        !thisTagList.includes(tag) && (thisTagList.push(tag))\n                        \n                        // associate the repo with it's tags\n                        tagList[tag].push(name)\n                    }\n                    return null\n                })\n            }\n\n            // save the repo info to display later\n            reposToDisplay[name] = [desc, url, thisTagList]\n        }\n\n\n        this.setState({\n            repos:reposToDisplay,\n            tagList:tagList\n        })\n    }\n}\n\n\n\n\n// #### REPO LIST ####\n\nfunction RepoList(props){\n    let repoList = Object.keys(props.repos).map(\n        (name,i) => {\n            let repos = props.repos\n            let [desc,url,tagList] = repos[name]\n\n\n            tagList = tagList.map((tag, i) => <p key={i}>#{tag}</p>)\n\n            let shown = props.visableRepos === undefined \n                ? 'true' \n                : props.visableRepos.includes(name) \n                    ? 'true' \n                    : 'false'\n            \n            \n            return (\n                <a href={url} className='repo' shown={shown} key={name+'-'+i}>\n                <div>\n                    <h3>{name}</h3>\n                    <p>{desc}</p>\n                    <div className='tags'>\n                        {tagList}\n                    </div>\n                </div>\n                </a>\n            )\n        }\n    )\n\n\n    return <div className='RepoWrapper'>{repoList}</div>\n}\n\n\n\n\n\n\n// #### TAG LIST ####\n\nfunction TagList(props){\n    let tags = Object.keys(props.tags).map(\n        tag => {\n\n            return (\n                <Tags \n                    name={tag}  \n                    updateSelectedTag={props.updateSelectedTag}\n                    selectedTag={props.selectedTag}\n                    key={tag}\n                />\n            )\n        }\n    )\n\n    return (\n        <div className='TagWrapper'>\n            <div className='Tags'>\n                <Tags \n                    name='All'\n                    updateSelectedTag={props.updateSelectedTag}\n                    selectedTag={props.selectedTag}\n                    /> \n                {tags} \n            </div>\n        </div>\n    )\n}\n\n\n// #### TAGS ####\n\nfunction Tags(props){\n    let highlight = props.name === props.selectedTag ? 'true' : 'false'\n    // console.log(props.name, props.selectedTag, highlight)\n\n    return <a className='Tag' highlight={highlight} onClick={()=>{props.updateSelectedTag(props.name)}}>{props.name}</a>\n}","import React from 'react'\nimport {Repos} from './Repos'\nimport UserAPI from '../APIJson/user.json'\nimport EventAPI from '../APIJson/events.json'\n\n\n\nexport class Portfolio extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            name:'',\n            bio:'',\n            email:'',\n            blog:'',\n        }\n    }\n\n    render(){\n        let username = this.props.username\n        let blog = this.state.blog.substring(0,4).toUpperCase() === 'HTTP' ? this.state.blog : 'http://' + this.state.blog\n        blog = this.state.blog ? <a href={blog} title='Website'><i className=\"material-icons\">web</i></a> : ''\n        let email = this.state.email ? <a href={'mailto:' + this.state.email} title='Email'><i className=\"material-icons\">email</i></a> : ''\n        \n        return(\n            <div id='Portfolio'>\n                <div id='Intro'>\n                    <div>\n                        <h1 id='name'>{this.state.name}</h1>\n                        <p id='bio'>{this.state.bio}</p>\n                        {blog}\n                        {email}\n                    </div>\n                </div>\n\n                <Repos github={username}/>\n            </div>\n        )\n    }\n\n    async getUser(username){\n        let url = 'https://api.github.com/users/' + username\n        // use this for dev\n        // return UserAPI\n\n        let user = await fetch(url)\n        return user.json()\n    }\n    \n    async getEvents(username){\n        let url = 'https://api.github.com/users/'+username+'/events'\n        \n        // use this for dev\n        // return EventAPI\n        \n        let events = await fetch(url)\n        return events.json()\n    }\n\n    getEmail(name, events){\n        for (let event in events){\n            let commits = events[event]['payload']['commits']\n            if(commits){\n                for (let commit in commits ){\n                    let author = commits[commit]['author'] || {name:'',email:''}\n                    if (author['name'] === name && author['email']){\n                        return author['email']\n                    }\n                }\n            }\n        }\n\n        return ''\n    }\n    \n    async componentDidMount(){\n        let username = this.props.username\n        let user = await this.getUser(username)\n        let events = await this.getEvents(username)\n        \n\n        this.setState({\n            name: user.name,\n            bio: user.bio,\n            blog: user.blog,\n            email: this.getEmail(user.name, events)\n        })\n    }\n}\n\n\n\n\n\n\n\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './main.scss'\n\nimport {Home} from './components/Home'\nimport {Portfolio} from './components/Portfolio'\n\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n\n\nfunction App(){\n    let username = window.location.href.split('?')[1]\n    return username ? <Portfolio username={username}/> : <Home/>\n}"],"sourceRoot":""}